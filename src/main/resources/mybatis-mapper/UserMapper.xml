<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- salary_tax_rate -->
<mapper namespace="com.ganguixu.dao.UserMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="userMap" type="com.ganguixu.model.User">
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="pass" property="pass" jdbcType="VARCHAR" />
<!--        <id column="id" property="id" jdbcType="INTEGER" />-->
<!--        <result column="up_taxable_income" property="upTaxableIncome" jdbcType="DECIMAL" />-->
<!--        <result column="lower_taxable_income" property="lowerTaxableIncome" jdbcType="DECIMAL" />-->
<!--        <result column="rate" property="rate" jdbcType="DECIMAL" />-->
<!--        <result column="deduction" property="deduction" jdbcType="DECIMAL" />-->
<!--        <result column="effective_time" property="effectiveTime" jdbcType="VARCHAR" />-->
<!--        <result column="failure_time" property="failureTime" jdbcType="VARCHAR" />-->
<!--        <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />-->
<!--        <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />-->
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->

    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        u.name,u.pass
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->

    <!-- 查询所有 -->
    <select id="findUserAll" resultMap="userMap">
        SELECT
            <include refid="allColumns" />
        FROM user u
    </select>

    <!-- 根据条件参数查询列表 -->
    <select id="findSalaryTaxRateByCondition" resultMap="salaryTaxRateMap" parameterType="java.util.Map">
        SELECT
            <include refid="allColumns" />
        FROM salary_tax_rate str WHERE 1 = 1
        <if test="upTaxableIncome != null">
            AND str.up_taxable_income = #{upTaxableIncome}
        </if>
        <if test="lowerTaxableIncome != null">
            AND str.lower_taxable_income = #{lowerTaxableIncome}
        </if>
        <if test="rate != null">
            AND str.rate = #{rate}
        </if>
        <if test="deduction != null">
            AND str.deduction = #{deduction}
        </if>
        <if test="effectiveTime != null and effectiveTime != ''">
            AND str.effective_time LIKE CONCAT('%', #{effectiveTime}, '%')
        </if>
        <if test="failureTime != null and failureTime != ''">
            AND str.failure_time LIKE CONCAT('%', #{failureTime}, '%')
        </if>
        <if test="createtime != null">
            AND str.createtime = #{createtime}
        </if>
        <if test="updatetime != null">
            AND str.updatetime = #{updatetime}
        </if>
    </select>

    <!-- 根据主键查询信息 -->
    <select id="findSalaryTaxRateByIds" resultMap="salaryTaxRateMap" parameterType="java.util.List">
        SELECT
            <include refid="allColumns" />
        FROM salary_tax_rate str WHERE str.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- 新增信息 -->
    <insert id="addSalaryTaxRate">
        INSERT INTO salary_tax_rate (
            id, up_taxable_income, lower_taxable_income, rate, deduction, effective_time, failure_time, createtime,
            updatetime
        ) VALUES (
            #{id},
            #{upTaxableIncome},
            #{lowerTaxableIncome},
            #{rate},
            #{deduction},
            #{effectiveTime},
            #{failureTime},
            #{createtime},
            #{updatetime}
        )
    </insert>

    <!-- 批量新增信息 -->
    <insert id="addSalaryTaxRates" parameterType="java.util.List">
        INSERT INTO salary_tax_rate (
            id, up_taxable_income, lower_taxable_income, rate, deduction, effective_time, failure_time, createtime,
            updatetime
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.upTaxableIncome},
                #{item.lowerTaxableIncome},
                #{item.rate},
                #{item.deduction},
                #{item.effectiveTime},
                #{item.failureTime},
                #{item.createtime},
                #{item.updatetime}
            )
        </foreach>
    </insert>

    <!-- 修改信息 -->
    <update id="updateSalaryTaxRate">
        UPDATE salary_tax_rate
        <set>
            <if test="upTaxableIncome != null">
                up_taxable_income = #{upTaxableIncome},
            </if>
            <if test="lowerTaxableIncome != null">
                lower_taxable_income = #{lowerTaxableIncome},
            </if>
            <if test="rate != null">
                rate = #{rate},
            </if>
            <if test="deduction != null">
                deduction = #{deduction},
            </if>
            <if test="effectiveTime != null">
                effective_time = #{effectiveTime},
            </if>
            <if test="failureTime != null">
                failure_time = #{failureTime},
            </if>
            <if test="createtime != null">
                createtime = #{createtime},
            </if>
            <if test="updatetime != null">
                updatetime = #{updatetime}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 批量修改信息 -->
    <update id="updateSalaryTaxRates" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE salary_tax_rate
            <set>
                <if test="item.upTaxableIncome != null">
                    up_taxable_income = #{item.upTaxableIncome},
                </if>
                <if test="item.lowerTaxableIncome != null">
                    lower_taxable_income = #{item.lowerTaxableIncome},
                </if>
                <if test="item.rate != null">
                    rate = #{item.rate},
                </if>
                <if test="item.deduction != null">
                    deduction = #{item.deduction},
                </if>
                <if test="item.effectiveTime != null">
                    effective_time = #{item.effectiveTime},
                </if>
                <if test="item.failureTime != null">
                    failure_time = #{item.failureTime},
                </if>
                <if test="item.createtime != null">
                    createtime = #{item.createtime},
                </if>
                <if test="item.updatetime != null">
                    updatetime = #{item.updatetime}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>

    <!-- 根据主键删除 -->
    <delete id="deleteSalaryTaxRateById" parameterType="java.lang.Integer">
        DELETE FROM salary_tax_rate WHERE id = #{id}
    </delete>

    <!-- 根据主键批量删除 -->
    <delete id="deleteSalaryTaxRateByIds" parameterType="java.util.List">
        DELETE FROM salary_tax_rate WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
